# Гениальный ученый по имени Рик изобрел вакцину против опасного вируса.
# Следующей целью Рика является изготовление и доставка наибольшего числа образцов вакцины в параллельные вселенные.
# К сожалению, его портальная технология не позволяет перемещаться в любые две соседние параллельные вселенные.
# Невозможно посетить как соседние вселенные текущей, в которой находится Рик, так и соседние вселенные уже посещенных ранее.
# Каждая вселенная по разным причинам имеет ограничение по количеству образцов вакцины, которые она может принять.
# Помогите Рику понять, сколько образцов вакцин ему надо изготовить, при условии,
# что его помощник Морти предоставит ему карту(список) вселенных и количество образцов вакцин,
# которые сможет принять каждая. Рику не известны эти данные заранее, придется разработать универсальный алгоритм.
#
# Входные данные - карта вселенных с ограничениями по количеству образцов вакцин (целочисленный массив неотрицательных чисел).
# Выходные данные - количество образцов вакцин, которое надо изготовить (целое неотрицательное число).
# Первая и последние вселенные не являются соседними в списке вселенных предоставленных Морти, при условии что в списке больше двух вселенных.
#
# Требования:
# Решением должна быть консольная программа на языке Python, принимающая на вход в качестве параметра программы целочисленный массив данных и возвращающая в консоль ответ как одно число.

print('Rick\'s vaccine')
print('------------||------------')
print()
# list_of_planets_ = [input('Input list of planets space separated')]
# print(list_of_planets_)

number_of_planets = int(input('Input number of planets '))
# if number_of_planets.isdigit() (
list_of_planets_ = []
i = 0
while i < number_of_planets:
    list_of_planets_.append(int(input('Input capacity of planet ')))
    i += 1
print(list_of_planets_)



# list_of_planets = [13, 5, 13, 8, 2, 13, 13, 4, 6]
# my_list_2 = [2, 7, 13, 3]
# my_list_3 = []
# my_list_4 = []
# i = int(input('Input the number of elements in massive 1: '))
# j = int(input('Input the number of elements in massive 2: '))
# values for 1st list